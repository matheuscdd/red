name: "proj-prod"
services:
  aux:
    build:
      context: ./asp
      dockerfile: Dockerfile.aux
    image: aux
    environment:
      HOST: "${HOST}"
      SECRET_KEY: "${SECRET_KEY}"
      SQL_SERVER_URL: "${SQL_SERVER_URL}"
    networks:
      - net
    depends_on:
      - mssql
      - asp
  asp:
    build:
      context: ./asp
      dockerfile: Dockerfile.prod
      args:
        HOST: "${HOST}"
        SECRET_KEY: "${SECRET_KEY}"
        SQL_SERVER_URL: "${SQL_SERVER_URL}"
        GEO_IP_PATH: "${GEO_IP_PATH}"
    image: asp
    environment:
      HOST: "${HOST}"
      SECRET_KEY: "${SECRET_KEY}"
      SQL_SERVER_URL: "${SQL_SERVER_URL}"
      DEPLOY_URL: "${DEPLOY_URL}"
      GEO_IP_PATH: "${GEO_IP_PATH}"
      SIGNOZ_URL: "http://signoz-otel-collector:4317"
    networks:
      - net
    depends_on:
      - mssql
  mssql:
    build:
      context: ./mssql
      dockerfile: Dockerfile
    image: mssql
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "${MSSQL_SA_PASSWORD}"
      MSSQL_TLS_ENFORCE: 0
    volumes:
      - storage-mssql:/var/opt/mssql
    networks:
      - net
  nginx:
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    image: nginx
    # Precisa fazer isso para n√£o entrar em conflito com as portas do nginx do signoz
    ports:
      - "81:80"
      - "444:443"
    environment:
      DOMAIN: "${DOMAIN}"
      EMAIL_SUPPORT: "${EMAIL_SUPPORT}"
      STAGING_URL: "${STAGING_URL}"
    depends_on:
      - mssql
      - asp
    networks:
      - net

networks:
  net:
    driver: bridge
volumes:
  storage-mssql:
    driver: local
